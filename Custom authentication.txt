Custom Authentication
======================
1. Custom Authentication class by extending from BaseAuthentication

2. authenticate()--for overide

3. Return tuple: (user,None)
4. AuthenticationFailed exception

authentication.py
------------------
from rest_framework.authentication import BaseAuthentication
from django.contrib.auth.models import User
from rest_framework.exceptions import AuthenticationFailed

class CustomAuthentication(BaseAuthentication):
    def authenticate(self, request):
        username=request.GET.get('username')
        if username is None:
            return None
        try:
            user=User.objects.get(username=username)
        except User.DoesNotExist:
            raise AuthenticationFailed("Your credential are invalid,plz provied valid credentials")
        return (user,None)

views.py
--------
from .serializers import EmployeeSerializer
from rest_framework.viewsets import ModelViewSet
from .models import Employee
from rest_framework_jwt.authentication import JSONWebTokenAuthentication
from rest_framework.permissions import IsAuthenticated
from .authentication import CustomAuthentication

class EmployeeCURDCBV(ModelViewSet):
    queryset = Employee.objects.all()
    serializer_class = EmployeeSerializer
    authentication_classes = [JSONWebTokenAuthentication,]
  #  authentication_classes = [CustomAuthentication,]
    permission_classes = [IsAuthenticated,]


